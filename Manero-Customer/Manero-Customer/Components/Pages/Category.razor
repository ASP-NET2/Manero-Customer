@page "/subCategories/{categorie}"
@using Manero_Customer.Data.Models
@using Manero_Customer.Services
@inject HttpClient Http
@inject ProductService productService
@inject SubCategoryService subCategoryService
@inject FilterService filterservice

<div class="container">

<h3>Subcategories for @Categorie</h3>

@if (subcategories == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="subContainer">
        @foreach (var model in models)
        {
            <div class="subCategoryItem">
                <NavLink href=@($"/products/{model.SubCategoryName}")>

                <p>@model.SubCategoryName</p>
                <div class="imgContainer">
                    <img src="@model.ImageLink"/>
                </div>
                </NavLink>
            </div>
        }
    </div>
  
}
</div>

@code {
    [Parameter]
    public string? Categorie { get; set; }
    private List<string> subcategories = new ();
    private List<ProductModel> products = new ();
    public List<SubCategoryModel> models = new();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            products = await productService.FilterProduct(Categorie!);
            subcategories = filterservice.FilterSubCategory(products);
            models = await subCategoryService.SortSubCategoryAsync(subcategories);

        }
        catch (Exception ex)
        {
            // Logga felet eller visa ett felmeddelande
            Console.Error.WriteLine($"Fel vid hämtning av produktdata: {ex.Message}");
        }
    }
}
