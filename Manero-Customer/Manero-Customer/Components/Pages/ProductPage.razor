@page "/product/{title}"
@using Manero_Customer.Services
@using Manero_Customer.Data.Models
@inject NavigationManager Navigation
@inject ProductDetailsService productDetailsService
@inject ILogger<ProductPage> Logger

<div class="container">
    <section class="ProductPage">
        <div class="container">
            @if (product != null)
            {
                <img class="product-image" src="@product.ImageUrl" alt="produktbild" />

                <div class="product-content">
                    <h3>Titel: @product.Title</h3>
                    <p>Författare: @product.Author</p>
                    <p>Pris: @product.Price</p>
                    <h5>Beskrivning</h5>
                    <p>@product.LongDescription</p>
                    
                </div>

                <button class="btn-theme">+ LÄGG TILL I KUNDVAGNEN</button>
            }
            else
            {
                <p>Produkten kunde inte hittas.</p>
            }
        </div>
    </section>
</div>

@code {
    [Parameter]
    public string? Title { get; set; }

    private ProductDetailsModel? product;

    protected override async Task OnParametersSetAsync()
    {
        if (!string.IsNullOrEmpty(Title))
        {
            try
            {
                Logger.LogInformation("Loading product details for title: {Title}", Title);
                var products = await productDetailsService.MatchProductsByTitleAsync(Title);
                product = products.FirstOrDefault();
                Logger.LogInformation("Product loaded: {Product}", product?.Title);
            }
            catch (Exception ex)
            {
                Logger.LogError(ex, "Error loading product details for title: {Title}", Title);
                product = null;
            }
        }
    }
}