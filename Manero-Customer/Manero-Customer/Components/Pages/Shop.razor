@inject ProductService productService
@inject HttpClient Http;

@page "/products/{subcategory}"
@using Manero_Customer.Data.Models
@using Manero_Customer.Services
@using Manero_Customer.Components.SubComponents


<div class="container">
    <div class="shop">
        <h3>@SubCategory</h3>

        <div class="productContainer">
            @foreach (var item in products)
            {
                <NavLink href=@($"/product/{item.Title}")>                  
                <_ShopProductCard 
                    ImageUrl="@item.ImageUrl"
                    Title="@item.Title"
                    Price="@item.Price"
                    DiscountPrice="@item.DiscountPrice"
                    Rating="@item.Rating"
                    OnSale="@item.OnSale"
                    />
                </NavLink>
            }
        </div>
    </div>
</div>


@code {
    [Parameter]
    public string? SubCategory { get; set; }
    List<ProductModel> products = new();
    protected override async Task OnInitializedAsync()
    {
        try
        {
            var test = new Dictionary<string, string>
            {
                { "Subcategory",  SubCategory! }
            };
            products = await productService.FilterProduct(test);            
        }
        catch (Exception ex)
        {
            // Logga felet eller visa ett felmeddelande
            Console.Error.WriteLine($"Fel vid hämtning av produktdata: {ex.Message}");
        }
    }
}
