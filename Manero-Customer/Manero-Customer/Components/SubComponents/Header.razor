@inject CartService cartService
@inject CookieService cookieService
@using Manero_Customer.Data.Models
@using Manero_Customer.Services
@rendermode InteractiveServer

<section class="header">
    <div class="container">
        <div class="not-active">
            <i class="fa-duotone fa-bars "></i>
        </div>
        <NavLink href="/">
            <h1>MANERO</h1>
        </NavLink>
        <div>
            @if (@totalItems > 0)
            {
                <NavLink href="shoppingCart">

                <div class="shoppingCart">
                    <div class="circle">@totalItems :-</div>    
                    <i class="fa-regular fa-shopping-bag"></i>                
                </div>
                </NavLink>
            }
            else
            {
                <NavLink href="shoppingCart">

                <i class="fa-regular fa-shopping-bag"></i>
                </NavLink>
            }
        </div>
    </div>
</section>
@code {
    private Cart? cart;
    private int totalItems;

    protected override async Task OnInitializedAsync()
    {
        cartService.OnChange += StateChanged;
        await GetList();      
    }

    public async Task GetList()
    {

        var sessionId = cookieService.GetSessionIdCookie();
        //var sessionId = "1e687f27-4b3b-4c70-9a35-d6b0f4b8a41f";
        var cart = await cartService.GetCartList(sessionId);
        if (cart != null)
        {
            totalItems = 0;
            foreach (var prod in cart.Products)
            {
                totalItems += prod.Price * prod.Quantity;
            }
        }
    }

    private async void StateChanged()
    {
        await GetList();
        StateHasChanged();
    }

    public void Dispose()
    {
        cartService.OnChange -= StateChanged;
    }
}


