@page "/Account/SignIn"

@using System.ComponentModel.DataAnnotations
@using Manero_Customer.Data.Models
@using Manero_Customer.Services
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Identity
@using Manero_Customer.Data

@inject SignInManager<ApplicationUser> SignInManager
@inject ILogger<SignIn> Logger
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager
@inject SignInService SignInService

<PageTitle>Log in</PageTitle>

<section class="signin">
    <div class="container">
        
        <h1>Welcome Back!</h1>
        <h4>Sign in to continue</h4>
        <EditForm Model="Form" method="post" OnValidSubmit="LoginUser" FormName="login">
            <AntiforgeryToken />
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert" />

            <div class="input-group">
                <label for="email">EMAIL</label>
                <InputText class="input-box" @bind-Value="Form.Email" aria-required="true" placeholder="name@example.com" />
                <ValidationMessage For="() => Form.Email" class="text-danger" />
            </div>

            <div class="input-group">
                <label>PASSWORD</label>
                <InputText class="input-box" type="password" @bind-Value="Form.Password" aria-required="true" placeholder="password" />
                <ValidationMessage For="() => Form.Password" class="text-danger" />
            </div>
           
            <div class="checkbox-group">
                <div class="input-check">
                    <InputCheckbox class="checkbox" @bind-Value="Form.RememberMe"></InputCheckbox>
                    <label>Remember Me</label>
                </div>
                    <a href="Account/ForgotPassword">Forgot password?</a>
            </div>

            <div class="placement-btn">
                <button type="submit" class="btn-theme">Sign In</button>
            </div>
            <div>   
                <p>Don't have an account? <NavLink href="/Account/SignUp">Sign Up</NavLink></p>
            </div>
        </EditForm>
    </div>
   
</section>

@code {
    public string? errorMessage;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromForm]
    public SignInModel Form { get; set; } = new();

    public async Task LoginUser()
    {
        errorMessage = await SignInService.SignInUserAsync(Form);
    }

}
